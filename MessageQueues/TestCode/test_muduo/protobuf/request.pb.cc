// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: request.proto

#include "request.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace HQJ {
PROTOBUF_CONSTEXPR tanslate_request::tanslate_request(
    ::_pbi::ConstantInitialized)
  : word_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct tanslate_requestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR tanslate_requestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~tanslate_requestDefaultTypeInternal() {}
  union {
    tanslate_request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 tanslate_requestDefaultTypeInternal _tanslate_request_default_instance_;
PROTOBUF_CONSTEXPR tanslate_respond::tanslate_respond(
    ::_pbi::ConstantInitialized)
  : word_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct tanslate_respondDefaultTypeInternal {
  PROTOBUF_CONSTEXPR tanslate_respondDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~tanslate_respondDefaultTypeInternal() {}
  union {
    tanslate_respond _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 tanslate_respondDefaultTypeInternal _tanslate_respond_default_instance_;
PROTOBUF_CONSTEXPR add_request::add_request(
    ::_pbi::ConstantInitialized)
  : a_(uint64_t{0u})
  , b_(uint64_t{0u}){}
struct add_requestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR add_requestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~add_requestDefaultTypeInternal() {}
  union {
    add_request _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 add_requestDefaultTypeInternal _add_request_default_instance_;
PROTOBUF_CONSTEXPR add_respond::add_respond(
    ::_pbi::ConstantInitialized)
  : result_(uint64_t{0u}){}
struct add_respondDefaultTypeInternal {
  PROTOBUF_CONSTEXPR add_respondDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~add_respondDefaultTypeInternal() {}
  union {
    add_respond _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 add_respondDefaultTypeInternal _add_respond_default_instance_;
}  // namespace HQJ
static ::_pb::Metadata file_level_metadata_request_2eproto[4];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_request_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_request_2eproto = nullptr;

const uint32_t TableStruct_request_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::HQJ::tanslate_request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HQJ::tanslate_request, word_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::HQJ::tanslate_respond, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HQJ::tanslate_respond, word_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::HQJ::add_request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HQJ::add_request, a_),
  PROTOBUF_FIELD_OFFSET(::HQJ::add_request, b_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::HQJ::add_respond, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::HQJ::add_respond, result_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::HQJ::tanslate_request)},
  { 7, -1, -1, sizeof(::HQJ::tanslate_respond)},
  { 14, -1, -1, sizeof(::HQJ::add_request)},
  { 22, -1, -1, sizeof(::HQJ::add_respond)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::HQJ::_tanslate_request_default_instance_._instance,
  &::HQJ::_tanslate_respond_default_instance_._instance,
  &::HQJ::_add_request_default_instance_._instance,
  &::HQJ::_add_respond_default_instance_._instance,
};

const char descriptor_table_protodef_request_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\rrequest.proto\022\003HQJ\" \n\020tanslate_request"
  "\022\014\n\004word\030\001 \001(\t\" \n\020tanslate_respond\022\014\n\004wo"
  "rd\030\001 \001(\t\"#\n\013add_request\022\t\n\001a\030\001 \001(\004\022\t\n\001b\030"
  "\002 \001(\004\"\035\n\013add_respond\022\016\n\006result\030\001 \001(\004b\006pr"
  "oto3"
  ;
static ::_pbi::once_flag descriptor_table_request_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_request_2eproto = {
    false, false, 164, descriptor_table_protodef_request_2eproto,
    "request.proto",
    &descriptor_table_request_2eproto_once, nullptr, 0, 4,
    schemas, file_default_instances, TableStruct_request_2eproto::offsets,
    file_level_metadata_request_2eproto, file_level_enum_descriptors_request_2eproto,
    file_level_service_descriptors_request_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_request_2eproto_getter() {
  return &descriptor_table_request_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_request_2eproto(&descriptor_table_request_2eproto);
namespace HQJ {

// ===================================================================

class tanslate_request::_Internal {
 public:
};

tanslate_request::tanslate_request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:HQJ.tanslate_request)
}
tanslate_request::tanslate_request(const tanslate_request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  word_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    word_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_word().empty()) {
    word_.Set(from._internal_word(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:HQJ.tanslate_request)
}

inline void tanslate_request::SharedCtor() {
word_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  word_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

tanslate_request::~tanslate_request() {
  // @@protoc_insertion_point(destructor:HQJ.tanslate_request)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void tanslate_request::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  word_.Destroy();
}

void tanslate_request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void tanslate_request::Clear() {
// @@protoc_insertion_point(message_clear_start:HQJ.tanslate_request)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  word_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* tanslate_request::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string word = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_word();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "HQJ.tanslate_request.word"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* tanslate_request::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HQJ.tanslate_request)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string word = 1;
  if (!this->_internal_word().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_word().data(), static_cast<int>(this->_internal_word().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "HQJ.tanslate_request.word");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_word(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HQJ.tanslate_request)
  return target;
}

size_t tanslate_request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HQJ.tanslate_request)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string word = 1;
  if (!this->_internal_word().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_word());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData tanslate_request::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    tanslate_request::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*tanslate_request::GetClassData() const { return &_class_data_; }

void tanslate_request::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<tanslate_request *>(to)->MergeFrom(
      static_cast<const tanslate_request &>(from));
}


void tanslate_request::MergeFrom(const tanslate_request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HQJ.tanslate_request)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_word().empty()) {
    _internal_set_word(from._internal_word());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void tanslate_request::CopyFrom(const tanslate_request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HQJ.tanslate_request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tanslate_request::IsInitialized() const {
  return true;
}

void tanslate_request::InternalSwap(tanslate_request* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &word_, lhs_arena,
      &other->word_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata tanslate_request::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_request_2eproto_getter, &descriptor_table_request_2eproto_once,
      file_level_metadata_request_2eproto[0]);
}

// ===================================================================

class tanslate_respond::_Internal {
 public:
};

tanslate_respond::tanslate_respond(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:HQJ.tanslate_respond)
}
tanslate_respond::tanslate_respond(const tanslate_respond& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  word_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    word_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_word().empty()) {
    word_.Set(from._internal_word(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:HQJ.tanslate_respond)
}

inline void tanslate_respond::SharedCtor() {
word_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  word_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

tanslate_respond::~tanslate_respond() {
  // @@protoc_insertion_point(destructor:HQJ.tanslate_respond)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void tanslate_respond::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  word_.Destroy();
}

void tanslate_respond::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void tanslate_respond::Clear() {
// @@protoc_insertion_point(message_clear_start:HQJ.tanslate_respond)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  word_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* tanslate_respond::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string word = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_word();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "HQJ.tanslate_respond.word"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* tanslate_respond::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HQJ.tanslate_respond)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string word = 1;
  if (!this->_internal_word().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_word().data(), static_cast<int>(this->_internal_word().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "HQJ.tanslate_respond.word");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_word(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HQJ.tanslate_respond)
  return target;
}

size_t tanslate_respond::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HQJ.tanslate_respond)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string word = 1;
  if (!this->_internal_word().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_word());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData tanslate_respond::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    tanslate_respond::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*tanslate_respond::GetClassData() const { return &_class_data_; }

void tanslate_respond::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<tanslate_respond *>(to)->MergeFrom(
      static_cast<const tanslate_respond &>(from));
}


void tanslate_respond::MergeFrom(const tanslate_respond& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HQJ.tanslate_respond)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_word().empty()) {
    _internal_set_word(from._internal_word());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void tanslate_respond::CopyFrom(const tanslate_respond& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HQJ.tanslate_respond)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tanslate_respond::IsInitialized() const {
  return true;
}

void tanslate_respond::InternalSwap(tanslate_respond* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &word_, lhs_arena,
      &other->word_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata tanslate_respond::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_request_2eproto_getter, &descriptor_table_request_2eproto_once,
      file_level_metadata_request_2eproto[1]);
}

// ===================================================================

class add_request::_Internal {
 public:
};

add_request::add_request(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:HQJ.add_request)
}
add_request::add_request(const add_request& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&a_, &from.a_,
    static_cast<size_t>(reinterpret_cast<char*>(&b_) -
    reinterpret_cast<char*>(&a_)) + sizeof(b_));
  // @@protoc_insertion_point(copy_constructor:HQJ.add_request)
}

inline void add_request::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&a_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&b_) -
    reinterpret_cast<char*>(&a_)) + sizeof(b_));
}

add_request::~add_request() {
  // @@protoc_insertion_point(destructor:HQJ.add_request)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void add_request::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void add_request::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void add_request::Clear() {
// @@protoc_insertion_point(message_clear_start:HQJ.add_request)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&a_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&b_) -
      reinterpret_cast<char*>(&a_)) + sizeof(b_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* add_request::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 a = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          a_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint64 b = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          b_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* add_request::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HQJ.add_request)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 a = 1;
  if (this->_internal_a() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_a(), target);
  }

  // uint64 b = 2;
  if (this->_internal_b() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(2, this->_internal_b(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HQJ.add_request)
  return target;
}

size_t add_request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HQJ.add_request)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 a = 1;
  if (this->_internal_a() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_a());
  }

  // uint64 b = 2;
  if (this->_internal_b() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_b());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData add_request::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    add_request::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*add_request::GetClassData() const { return &_class_data_; }

void add_request::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<add_request *>(to)->MergeFrom(
      static_cast<const add_request &>(from));
}


void add_request::MergeFrom(const add_request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HQJ.add_request)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_a() != 0) {
    _internal_set_a(from._internal_a());
  }
  if (from._internal_b() != 0) {
    _internal_set_b(from._internal_b());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void add_request::CopyFrom(const add_request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HQJ.add_request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool add_request::IsInitialized() const {
  return true;
}

void add_request::InternalSwap(add_request* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(add_request, b_)
      + sizeof(add_request::b_)
      - PROTOBUF_FIELD_OFFSET(add_request, a_)>(
          reinterpret_cast<char*>(&a_),
          reinterpret_cast<char*>(&other->a_));
}

::PROTOBUF_NAMESPACE_ID::Metadata add_request::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_request_2eproto_getter, &descriptor_table_request_2eproto_once,
      file_level_metadata_request_2eproto[2]);
}

// ===================================================================

class add_respond::_Internal {
 public:
};

add_respond::add_respond(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:HQJ.add_respond)
}
add_respond::add_respond(const add_respond& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:HQJ.add_respond)
}

inline void add_respond::SharedCtor() {
result_ = uint64_t{0u};
}

add_respond::~add_respond() {
  // @@protoc_insertion_point(destructor:HQJ.add_respond)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void add_respond::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void add_respond::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void add_respond::Clear() {
// @@protoc_insertion_point(message_clear_start:HQJ.add_respond)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = uint64_t{0u};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* add_respond::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint64 result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* add_respond::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:HQJ.add_respond)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 result = 1;
  if (this->_internal_result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt64ToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:HQJ.add_respond)
  return target;
}

size_t add_respond::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:HQJ.add_respond)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 result = 1;
  if (this->_internal_result() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData add_respond::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    add_respond::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*add_respond::GetClassData() const { return &_class_data_; }

void add_respond::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<add_respond *>(to)->MergeFrom(
      static_cast<const add_respond &>(from));
}


void add_respond::MergeFrom(const add_respond& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:HQJ.add_respond)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_result() != 0) {
    _internal_set_result(from._internal_result());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void add_respond::CopyFrom(const add_respond& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:HQJ.add_respond)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool add_respond::IsInitialized() const {
  return true;
}

void add_respond::InternalSwap(add_respond* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata add_respond::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_request_2eproto_getter, &descriptor_table_request_2eproto_once,
      file_level_metadata_request_2eproto[3]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace HQJ
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::HQJ::tanslate_request*
Arena::CreateMaybeMessage< ::HQJ::tanslate_request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HQJ::tanslate_request >(arena);
}
template<> PROTOBUF_NOINLINE ::HQJ::tanslate_respond*
Arena::CreateMaybeMessage< ::HQJ::tanslate_respond >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HQJ::tanslate_respond >(arena);
}
template<> PROTOBUF_NOINLINE ::HQJ::add_request*
Arena::CreateMaybeMessage< ::HQJ::add_request >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HQJ::add_request >(arena);
}
template<> PROTOBUF_NOINLINE ::HQJ::add_respond*
Arena::CreateMaybeMessage< ::HQJ::add_respond >(Arena* arena) {
  return Arena::CreateMessageInternal< ::HQJ::add_respond >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
